package com.proyectofinal.datos.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TipoPagoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public TipoPagoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    protected TipoPagoExample(TipoPagoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tipos_pago
     *
     * @ibatorgenerated Fri Oct 23 13:39:18 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdTipoPagoIsNull() {
            addCriterion("id_tipo_pago is null");
            return this;
        }

        public Criteria andIdTipoPagoIsNotNull() {
            addCriterion("id_tipo_pago is not null");
            return this;
        }

        public Criteria andIdTipoPagoEqualTo(Integer value) {
            addCriterion("id_tipo_pago =", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoNotEqualTo(Integer value) {
            addCriterion("id_tipo_pago <>", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoGreaterThan(Integer value) {
            addCriterion("id_tipo_pago >", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_tipo_pago >=", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoLessThan(Integer value) {
            addCriterion("id_tipo_pago <", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoLessThanOrEqualTo(Integer value) {
            addCriterion("id_tipo_pago <=", value, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoIn(List<Integer> values) {
            addCriterion("id_tipo_pago in", values, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoNotIn(List<Integer> values) {
            addCriterion("id_tipo_pago not in", values, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoBetween(Integer value1, Integer value2) {
            addCriterion("id_tipo_pago between", value1, value2, "idTipoPago");
            return this;
        }

        public Criteria andIdTipoPagoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_tipo_pago not between", value1, value2, "idTipoPago");
            return this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("nombre is null");
            return this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("nombre is not null");
            return this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("nombre =", value, "nombre");
            return this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("nombre <>", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("nombre >", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("nombre >=", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("nombre <", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("nombre <=", value, "nombre");
            return this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("nombre like", value, "nombre");
            return this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("nombre not like", value, "nombre");
            return this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("nombre in", values, "nombre");
            return this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("nombre not in", values, "nombre");
            return this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("nombre between", value1, value2, "nombre");
            return this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("nombre not between", value1, value2, "nombre");
            return this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return this;
        }
    }
}