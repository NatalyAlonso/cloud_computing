package com.proyectofinal.datos.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InstanciaProductoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public InstanciaProductoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    protected InstanciaProductoExample(InstanciaProductoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table instancia_productos
     *
     * @ibatorgenerated Thu Oct 22 14:46:50 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdInstanciaProductoIsNull() {
            addCriterion("id_instancia_producto is null");
            return this;
        }

        public Criteria andIdInstanciaProductoIsNotNull() {
            addCriterion("id_instancia_producto is not null");
            return this;
        }

        public Criteria andIdInstanciaProductoEqualTo(Integer value) {
            addCriterion("id_instancia_producto =", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoNotEqualTo(Integer value) {
            addCriterion("id_instancia_producto <>", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoGreaterThan(Integer value) {
            addCriterion("id_instancia_producto >", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_instancia_producto >=", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoLessThan(Integer value) {
            addCriterion("id_instancia_producto <", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoLessThanOrEqualTo(Integer value) {
            addCriterion("id_instancia_producto <=", value, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoIn(List<Integer> values) {
            addCriterion("id_instancia_producto in", values, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoNotIn(List<Integer> values) {
            addCriterion("id_instancia_producto not in", values, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoBetween(Integer value1, Integer value2) {
            addCriterion("id_instancia_producto between", value1, value2, "idInstanciaProducto");
            return this;
        }

        public Criteria andIdInstanciaProductoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_instancia_producto not between", value1, value2, "idInstanciaProducto");
            return this;
        }

        public Criteria andCodigoIsNull() {
            addCriterion("codigo is null");
            return this;
        }

        public Criteria andCodigoIsNotNull() {
            addCriterion("codigo is not null");
            return this;
        }

        public Criteria andCodigoEqualTo(String value) {
            addCriterion("codigo =", value, "codigo");
            return this;
        }

        public Criteria andCodigoNotEqualTo(String value) {
            addCriterion("codigo <>", value, "codigo");
            return this;
        }

        public Criteria andCodigoGreaterThan(String value) {
            addCriterion("codigo >", value, "codigo");
            return this;
        }

        public Criteria andCodigoGreaterThanOrEqualTo(String value) {
            addCriterion("codigo >=", value, "codigo");
            return this;
        }

        public Criteria andCodigoLessThan(String value) {
            addCriterion("codigo <", value, "codigo");
            return this;
        }

        public Criteria andCodigoLessThanOrEqualTo(String value) {
            addCriterion("codigo <=", value, "codigo");
            return this;
        }

        public Criteria andCodigoLike(String value) {
            addCriterion("codigo like", value, "codigo");
            return this;
        }

        public Criteria andCodigoNotLike(String value) {
            addCriterion("codigo not like", value, "codigo");
            return this;
        }

        public Criteria andCodigoIn(List<String> values) {
            addCriterion("codigo in", values, "codigo");
            return this;
        }

        public Criteria andCodigoNotIn(List<String> values) {
            addCriterion("codigo not in", values, "codigo");
            return this;
        }

        public Criteria andCodigoBetween(String value1, String value2) {
            addCriterion("codigo between", value1, value2, "codigo");
            return this;
        }

        public Criteria andCodigoNotBetween(String value1, String value2) {
            addCriterion("codigo not between", value1, value2, "codigo");
            return this;
        }

        public Criteria andFecha_recibidoIsNull() {
            addCriterion("fecha_recibido is null");
            return this;
        }

        public Criteria andFecha_recibidoIsNotNull() {
            addCriterion("fecha_recibido is not null");
            return this;
        }

        public Criteria andFecha_recibidoEqualTo(Date value) {
            addCriterion("fecha_recibido =", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoNotEqualTo(Date value) {
            addCriterion("fecha_recibido <>", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoGreaterThan(Date value) {
            addCriterion("fecha_recibido >", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoGreaterThanOrEqualTo(Date value) {
            addCriterion("fecha_recibido >=", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoLessThan(Date value) {
            addCriterion("fecha_recibido <", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoLessThanOrEqualTo(Date value) {
            addCriterion("fecha_recibido <=", value, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoIn(List<Date> values) {
            addCriterion("fecha_recibido in", values, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoNotIn(List<Date> values) {
            addCriterion("fecha_recibido not in", values, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoBetween(Date value1, Date value2) {
            addCriterion("fecha_recibido between", value1, value2, "fecha_recibido");
            return this;
        }

        public Criteria andFecha_recibidoNotBetween(Date value1, Date value2) {
            addCriterion("fecha_recibido not between", value1, value2, "fecha_recibido");
            return this;
        }

        public Criteria andId_productoIsNull() {
            addCriterion("id_producto is null");
            return this;
        }

        public Criteria andId_productoIsNotNull() {
            addCriterion("id_producto is not null");
            return this;
        }

        public Criteria andId_productoEqualTo(Long value) {
            addCriterion("id_producto =", value, "id_producto");
            return this;
        }

        public Criteria andId_productoNotEqualTo(Long value) {
            addCriterion("id_producto <>", value, "id_producto");
            return this;
        }

        public Criteria andId_productoGreaterThan(Long value) {
            addCriterion("id_producto >", value, "id_producto");
            return this;
        }

        public Criteria andId_productoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_producto >=", value, "id_producto");
            return this;
        }

        public Criteria andId_productoLessThan(Long value) {
            addCriterion("id_producto <", value, "id_producto");
            return this;
        }

        public Criteria andId_productoLessThanOrEqualTo(Long value) {
            addCriterion("id_producto <=", value, "id_producto");
            return this;
        }

        public Criteria andId_productoIn(List<Long> values) {
            addCriterion("id_producto in", values, "id_producto");
            return this;
        }

        public Criteria andId_productoNotIn(List<Long> values) {
            addCriterion("id_producto not in", values, "id_producto");
            return this;
        }

        public Criteria andId_productoBetween(Long value1, Long value2) {
            addCriterion("id_producto between", value1, value2, "id_producto");
            return this;
        }

        public Criteria andId_productoNotBetween(Long value1, Long value2) {
            addCriterion("id_producto not between", value1, value2, "id_producto");
            return this;
        }

        public Criteria andId_estado_productoIsNull() {
            addCriterion("id_estado_producto is null");
            return this;
        }

        public Criteria andId_estado_productoIsNotNull() {
            addCriterion("id_estado_producto is not null");
            return this;
        }

        public Criteria andId_estado_productoEqualTo(Long value) {
            addCriterion("id_estado_producto =", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoNotEqualTo(Long value) {
            addCriterion("id_estado_producto <>", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoGreaterThan(Long value) {
            addCriterion("id_estado_producto >", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_estado_producto >=", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoLessThan(Long value) {
            addCriterion("id_estado_producto <", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoLessThanOrEqualTo(Long value) {
            addCriterion("id_estado_producto <=", value, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoIn(List<Long> values) {
            addCriterion("id_estado_producto in", values, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoNotIn(List<Long> values) {
            addCriterion("id_estado_producto not in", values, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoBetween(Long value1, Long value2) {
            addCriterion("id_estado_producto between", value1, value2, "id_estado_producto");
            return this;
        }

        public Criteria andId_estado_productoNotBetween(Long value1, Long value2) {
            addCriterion("id_estado_producto not between", value1, value2, "id_estado_producto");
            return this;
        }
    }
}