package com.proyectofinal.datos.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PagosExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public PagosExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected PagosExample(PagosExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pagos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdPagoIsNull() {
            addCriterion("id_pago is null");
            return this;
        }

        public Criteria andIdPagoIsNotNull() {
            addCriterion("id_pago is not null");
            return this;
        }

        public Criteria andIdPagoEqualTo(Integer value) {
            addCriterion("id_pago =", value, "idPago");
            return this;
        }

        public Criteria andIdPagoNotEqualTo(Integer value) {
            addCriterion("id_pago <>", value, "idPago");
            return this;
        }

        public Criteria andIdPagoGreaterThan(Integer value) {
            addCriterion("id_pago >", value, "idPago");
            return this;
        }

        public Criteria andIdPagoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_pago >=", value, "idPago");
            return this;
        }

        public Criteria andIdPagoLessThan(Integer value) {
            addCriterion("id_pago <", value, "idPago");
            return this;
        }

        public Criteria andIdPagoLessThanOrEqualTo(Integer value) {
            addCriterion("id_pago <=", value, "idPago");
            return this;
        }

        public Criteria andIdPagoIn(List<Integer> values) {
            addCriterion("id_pago in", values, "idPago");
            return this;
        }

        public Criteria andIdPagoNotIn(List<Integer> values) {
            addCriterion("id_pago not in", values, "idPago");
            return this;
        }

        public Criteria andIdPagoBetween(Integer value1, Integer value2) {
            addCriterion("id_pago between", value1, value2, "idPago");
            return this;
        }

        public Criteria andIdPagoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_pago not between", value1, value2, "idPago");
            return this;
        }

        public Criteria andId_pedidoIsNull() {
            addCriterion("id_pedido is null");
            return this;
        }

        public Criteria andId_pedidoIsNotNull() {
            addCriterion("id_pedido is not null");
            return this;
        }

        public Criteria andId_pedidoEqualTo(Long value) {
            addCriterion("id_pedido =", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotEqualTo(Long value) {
            addCriterion("id_pedido <>", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoGreaterThan(Long value) {
            addCriterion("id_pedido >", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_pedido >=", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoLessThan(Long value) {
            addCriterion("id_pedido <", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoLessThanOrEqualTo(Long value) {
            addCriterion("id_pedido <=", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoIn(List<Long> values) {
            addCriterion("id_pedido in", values, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotIn(List<Long> values) {
            addCriterion("id_pedido not in", values, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoBetween(Long value1, Long value2) {
            addCriterion("id_pedido between", value1, value2, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotBetween(Long value1, Long value2) {
            addCriterion("id_pedido not between", value1, value2, "id_pedido");
            return this;
        }

        public Criteria andId_tipo_pagoIsNull() {
            addCriterion("id_tipo_pago is null");
            return this;
        }

        public Criteria andId_tipo_pagoIsNotNull() {
            addCriterion("id_tipo_pago is not null");
            return this;
        }

        public Criteria andId_tipo_pagoEqualTo(Long value) {
            addCriterion("id_tipo_pago =", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoNotEqualTo(Long value) {
            addCriterion("id_tipo_pago <>", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoGreaterThan(Long value) {
            addCriterion("id_tipo_pago >", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_tipo_pago >=", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoLessThan(Long value) {
            addCriterion("id_tipo_pago <", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoLessThanOrEqualTo(Long value) {
            addCriterion("id_tipo_pago <=", value, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoIn(List<Long> values) {
            addCriterion("id_tipo_pago in", values, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoNotIn(List<Long> values) {
            addCriterion("id_tipo_pago not in", values, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoBetween(Long value1, Long value2) {
            addCriterion("id_tipo_pago between", value1, value2, "id_tipo_pago");
            return this;
        }

        public Criteria andId_tipo_pagoNotBetween(Long value1, Long value2) {
            addCriterion("id_tipo_pago not between", value1, value2, "id_tipo_pago");
            return this;
        }
    }
}