package com.proyectofinal.datos.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FacturaExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public FacturaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    protected FacturaExample(FacturaExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table facturas
     *
     * @ibatorgenerated Thu Oct 22 16:39:02 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdFacturaIsNull() {
            addCriterion("id_factura is null");
            return this;
        }

        public Criteria andIdFacturaIsNotNull() {
            addCriterion("id_factura is not null");
            return this;
        }

        public Criteria andIdFacturaEqualTo(Integer value) {
            addCriterion("id_factura =", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaNotEqualTo(Integer value) {
            addCriterion("id_factura <>", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaGreaterThan(Integer value) {
            addCriterion("id_factura >", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_factura >=", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaLessThan(Integer value) {
            addCriterion("id_factura <", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaLessThanOrEqualTo(Integer value) {
            addCriterion("id_factura <=", value, "idFactura");
            return this;
        }

        public Criteria andIdFacturaIn(List<Integer> values) {
            addCriterion("id_factura in", values, "idFactura");
            return this;
        }

        public Criteria andIdFacturaNotIn(List<Integer> values) {
            addCriterion("id_factura not in", values, "idFactura");
            return this;
        }

        public Criteria andIdFacturaBetween(Integer value1, Integer value2) {
            addCriterion("id_factura between", value1, value2, "idFactura");
            return this;
        }

        public Criteria andIdFacturaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_factura not between", value1, value2, "idFactura");
            return this;
        }

        public Criteria andId_pedidoIsNull() {
            addCriterion("id_pedido is null");
            return this;
        }

        public Criteria andId_pedidoIsNotNull() {
            addCriterion("id_pedido is not null");
            return this;
        }

        public Criteria andId_pedidoEqualTo(Long value) {
            addCriterion("id_pedido =", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotEqualTo(Long value) {
            addCriterion("id_pedido <>", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoGreaterThan(Long value) {
            addCriterion("id_pedido >", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_pedido >=", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoLessThan(Long value) {
            addCriterion("id_pedido <", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoLessThanOrEqualTo(Long value) {
            addCriterion("id_pedido <=", value, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoIn(List<Long> values) {
            addCriterion("id_pedido in", values, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotIn(List<Long> values) {
            addCriterion("id_pedido not in", values, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoBetween(Long value1, Long value2) {
            addCriterion("id_pedido between", value1, value2, "id_pedido");
            return this;
        }

        public Criteria andId_pedidoNotBetween(Long value1, Long value2) {
            addCriterion("id_pedido not between", value1, value2, "id_pedido");
            return this;
        }

        public Criteria andRFC_clienteIsNull() {
            addCriterion("RFC_cliente is null");
            return this;
        }

        public Criteria andRFC_clienteIsNotNull() {
            addCriterion("RFC_cliente is not null");
            return this;
        }

        public Criteria andRFC_clienteEqualTo(String value) {
            addCriterion("RFC_cliente =", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteNotEqualTo(String value) {
            addCriterion("RFC_cliente <>", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteGreaterThan(String value) {
            addCriterion("RFC_cliente >", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteGreaterThanOrEqualTo(String value) {
            addCriterion("RFC_cliente >=", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteLessThan(String value) {
            addCriterion("RFC_cliente <", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteLessThanOrEqualTo(String value) {
            addCriterion("RFC_cliente <=", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteLike(String value) {
            addCriterion("RFC_cliente like", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteNotLike(String value) {
            addCriterion("RFC_cliente not like", value, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteIn(List<String> values) {
            addCriterion("RFC_cliente in", values, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteNotIn(List<String> values) {
            addCriterion("RFC_cliente not in", values, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteBetween(String value1, String value2) {
            addCriterion("RFC_cliente between", value1, value2, "RFC_cliente");
            return this;
        }

        public Criteria andRFC_clienteNotBetween(String value1, String value2) {
            addCriterion("RFC_cliente not between", value1, value2, "RFC_cliente");
            return this;
        }

        public Criteria andFecha_emisionIsNull() {
            addCriterion("fecha_emision is null");
            return this;
        }

        public Criteria andFecha_emisionIsNotNull() {
            addCriterion("fecha_emision is not null");
            return this;
        }

        public Criteria andFecha_emisionEqualTo(Date value) {
            addCriterion("fecha_emision =", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionNotEqualTo(Date value) {
            addCriterion("fecha_emision <>", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionGreaterThan(Date value) {
            addCriterion("fecha_emision >", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionGreaterThanOrEqualTo(Date value) {
            addCriterion("fecha_emision >=", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionLessThan(Date value) {
            addCriterion("fecha_emision <", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionLessThanOrEqualTo(Date value) {
            addCriterion("fecha_emision <=", value, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionIn(List<Date> values) {
            addCriterion("fecha_emision in", values, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionNotIn(List<Date> values) {
            addCriterion("fecha_emision not in", values, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionBetween(Date value1, Date value2) {
            addCriterion("fecha_emision between", value1, value2, "fecha_emision");
            return this;
        }

        public Criteria andFecha_emisionNotBetween(Date value1, Date value2) {
            addCriterion("fecha_emision not between", value1, value2, "fecha_emision");
            return this;
        }
    }
}