package com.proyectofinal.datos.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PedidoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public PedidoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected PedidoExample(PedidoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pedidos
     *
     * @ibatorgenerated Thu Oct 22 16:15:00 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdPedidoIsNull() {
            addCriterion("id_pedido is null");
            return this;
        }

        public Criteria andIdPedidoIsNotNull() {
            addCriterion("id_pedido is not null");
            return this;
        }

        public Criteria andIdPedidoEqualTo(Integer value) {
            addCriterion("id_pedido =", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoNotEqualTo(Integer value) {
            addCriterion("id_pedido <>", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoGreaterThan(Integer value) {
            addCriterion("id_pedido >", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_pedido >=", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoLessThan(Integer value) {
            addCriterion("id_pedido <", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoLessThanOrEqualTo(Integer value) {
            addCriterion("id_pedido <=", value, "idPedido");
            return this;
        }

        public Criteria andIdPedidoIn(List<Integer> values) {
            addCriterion("id_pedido in", values, "idPedido");
            return this;
        }

        public Criteria andIdPedidoNotIn(List<Integer> values) {
            addCriterion("id_pedido not in", values, "idPedido");
            return this;
        }

        public Criteria andIdPedidoBetween(Integer value1, Integer value2) {
            addCriterion("id_pedido between", value1, value2, "idPedido");
            return this;
        }

        public Criteria andIdPedidoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_pedido not between", value1, value2, "idPedido");
            return this;
        }

        public Criteria andId_clienteIsNull() {
            addCriterion("id_cliente is null");
            return this;
        }

        public Criteria andId_clienteIsNotNull() {
            addCriterion("id_cliente is not null");
            return this;
        }

        public Criteria andId_clienteEqualTo(Long value) {
            addCriterion("id_cliente =", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteNotEqualTo(Long value) {
            addCriterion("id_cliente <>", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteGreaterThan(Long value) {
            addCriterion("id_cliente >", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteGreaterThanOrEqualTo(Long value) {
            addCriterion("id_cliente >=", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteLessThan(Long value) {
            addCriterion("id_cliente <", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteLessThanOrEqualTo(Long value) {
            addCriterion("id_cliente <=", value, "id_cliente");
            return this;
        }

        public Criteria andId_clienteIn(List<Long> values) {
            addCriterion("id_cliente in", values, "id_cliente");
            return this;
        }

        public Criteria andId_clienteNotIn(List<Long> values) {
            addCriterion("id_cliente not in", values, "id_cliente");
            return this;
        }

        public Criteria andId_clienteBetween(Long value1, Long value2) {
            addCriterion("id_cliente between", value1, value2, "id_cliente");
            return this;
        }

        public Criteria andId_clienteNotBetween(Long value1, Long value2) {
            addCriterion("id_cliente not between", value1, value2, "id_cliente");
            return this;
        }

        public Criteria andFecha_pedidoIsNull() {
            addCriterion("fecha_pedido is null");
            return this;
        }

        public Criteria andFecha_pedidoIsNotNull() {
            addCriterion("fecha_pedido is not null");
            return this;
        }

        public Criteria andFecha_pedidoEqualTo(Date value) {
            addCriterion("fecha_pedido =", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoNotEqualTo(Date value) {
            addCriterion("fecha_pedido <>", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoGreaterThan(Date value) {
            addCriterion("fecha_pedido >", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoGreaterThanOrEqualTo(Date value) {
            addCriterion("fecha_pedido >=", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoLessThan(Date value) {
            addCriterion("fecha_pedido <", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoLessThanOrEqualTo(Date value) {
            addCriterion("fecha_pedido <=", value, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoIn(List<Date> values) {
            addCriterion("fecha_pedido in", values, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoNotIn(List<Date> values) {
            addCriterion("fecha_pedido not in", values, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoBetween(Date value1, Date value2) {
            addCriterion("fecha_pedido between", value1, value2, "fecha_pedido");
            return this;
        }

        public Criteria andFecha_pedidoNotBetween(Date value1, Date value2) {
            addCriterion("fecha_pedido not between", value1, value2, "fecha_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoIsNull() {
            addCriterion("id_estado_pedido is null");
            return this;
        }

        public Criteria andId_estado_pedidoIsNotNull() {
            addCriterion("id_estado_pedido is not null");
            return this;
        }

        public Criteria andId_estado_pedidoEqualTo(Long value) {
            addCriterion("id_estado_pedido =", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoNotEqualTo(Long value) {
            addCriterion("id_estado_pedido <>", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoGreaterThan(Long value) {
            addCriterion("id_estado_pedido >", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_estado_pedido >=", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoLessThan(Long value) {
            addCriterion("id_estado_pedido <", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoLessThanOrEqualTo(Long value) {
            addCriterion("id_estado_pedido <=", value, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoIn(List<Long> values) {
            addCriterion("id_estado_pedido in", values, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoNotIn(List<Long> values) {
            addCriterion("id_estado_pedido not in", values, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoBetween(Long value1, Long value2) {
            addCriterion("id_estado_pedido between", value1, value2, "id_estado_pedido");
            return this;
        }

        public Criteria andId_estado_pedidoNotBetween(Long value1, Long value2) {
            addCriterion("id_estado_pedido not between", value1, value2, "id_estado_pedido");
            return this;
        }
    }
}